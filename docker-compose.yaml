version: "3.8"

services:

  redis-server:
    image: redis:6.0.14-alpine3.14
    restart: always
    ports:
      - "6379:6379"

  postgres:
    image: postgres:14.3
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - $HOME/docker/volumes/postgres/testnet:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}

  app:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: app
    restart: always
    depends_on:
      - postgres
      - redis-server
    ports:
      - "5005:5005"
    links:
      - redis-server:redis-server
    env_file:
      - .env
    environment:
      - SQLALCHEMY_DATABASE_URI=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - REDIS_URL=redis://redis-server:6379/0
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USE_TLS=${MAIL_USE_TLS}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - ADMINS=${ADMINS}
    volumes:
      - $HOME/docker/volumes/testnet:/var/lib

  rq-worker:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: rq-worker
    restart: always
    links:
      - redis-server:redis-server
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis-server:6379/0
    entrypoint: /usr/local/bin/rq worker -u redis://redis-server:6379/0 testnet_worker
    depends_on:
      - redis-server
      - app

  client:
    build:
      dockerfile: Dockerfile
      context: .
    restart: always
    ports:
      - "80:80"
    depends_on:
      - app
